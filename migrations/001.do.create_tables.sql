CREATE TYPE status AS ENUM ('Active', 'Inactive', 'Disabled');
CREATE TYPE roles AS ENUM ('ADMIN', 'MANAGER', 'SELLER');

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_code INTEGER NOT NULL,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  address VARCHAR(200),
  phone VARCHAR(100),
  email VARCHAR(100),
  role roles DEFAULT 'ADMIN' NOT NULL,
  password VARCHAR(100) NOT NULL,
  status status DEFAULT 'Active' NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS products (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(100) NOT NULL,
  picture VARCHAR(100) NOT NULL,
  decription TEXT,
  stock INTEGER NOT NULL,
  price DECIMAL(8,2) NOT NULL,
  status status DEFAULT 'Active' NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS clients (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  full_name VARCHAR(200) NOT NULL,
  address VARCHAR(200),
  phone VARCHAR(100),
  email VARCHAR(100),
  status status DEFAULT 'Active' NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS promotions (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(200) NOT NULL,
  description TEXT,
  stock INTEGER NOT NULL,
  price DECIMAL(8,2) NOT NULL,
  picture VARCHAR(100) NOT NULL,
  status status DEFAULT 'Active' NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS promotion_product (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  promotion_id INTEGER
        REFERENCES promotions(id) ON DELETE CASCADE NOT NULL,
  product_id INTEGER
        REFERENCES products(id) ON DELETE CASCADE NOT NULL,
  quantity INTEGER NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS orders (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id INTEGER
        REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  client_id INTEGER
        REFERENCES clients(id) ON DELETE CASCADE,
  subtotal DECIMAL(8,2) NOT NULL,
  tax DECIMAL(8,2) NOT NULL,
  total DECIMAL(8,2) NOT NULL,
  observation TEXT,
  status status DEFAULT 'Active' NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS order_promotion (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  promotion_id INTEGER
        REFERENCES promotions(id) ON DELETE CASCADE NOT NULL,
  order_id INTEGER
        REFERENCES orders(id) ON DELETE CASCADE NOT NULL,
  price DECIMAL(8,2) NOT NULL,
  quantity INTEGER NOT NULL,
  observation TEXT,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS order_product (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  product_id INTEGER
        REFERENCES products(id) ON DELETE CASCADE NOT NULL,
  order_id INTEGER
        REFERENCES orders(id) ON DELETE CASCADE NOT NULL,
  price DECIMAL(8,2) NOT NULL,
  quantity INTEGER NOT NULL,
  observation TEXT,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE IF NOT EXISTS daily_sales (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id INTEGER
        REFERENCES users(id) ON DELETE CASCADE NOT NULL,
  number_sales INTEGER NOT NULL,
  subtotal DECIMAL(8,2) NOT NULL,
  tax DECIMAL(8,2) NOT NULL,
  total DECIMAL(8,2) NOT NULL,
  observation TEXT,
  date_sale TIMESTAMP DEFAULT now() NOT NULL,
  date_created TIMESTAMP DEFAULT now() NOT NULL
);
